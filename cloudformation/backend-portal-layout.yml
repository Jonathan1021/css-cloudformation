AWSTemplateFormatVersion: '2010-09-09'
Description: Layout Portal Truck

Parameters:
  DomainName:
    Type: String
    Description: Nombre de dominio para el CloudFront
  ApiName:
    Type: String
    Description: Nombre para el API Gateway
  FunctionArn:
    Type: String
    Description: ARN de la función Lambda para el método GET
  CognitoUserPoolName:
    Type: String
    Description: Nombre del grupo de usuarios para el Cognito

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${DomainName}-web-bucket"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: WebBucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: ""
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: WebBucketOrigin
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: false
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: /index.html
            ResponseCode: 200
          - ErrorCode: 404
            ResponsePagePath: /index.html
            ResponseCode: 200
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:123456789012:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          SslSupportMethod: sni-only

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiName

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: hello

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayAuthorizer
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty
      OperationName: "hello"

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ApiGatewayDeployment
      RestApiId: !Ref ApiGatewayRestApi
      StageName: Prod

  ApiGatewayAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: 300
      IdentitySource: method.request.header.Authorization
      Name: !Ref CognitoUserPoolName
      RestApiId: !Ref ApiGatewayRestApi
      Type: COGNITO_USER_POOLS

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref CognitoUserPoolName
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Ref CognitoUserPoolName
      UserPoolId: !Ref CognitoUserPool

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref CognitoUserPoolName
      UserPoolId: !Ref CognitoUserPool

  WAFWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: "WebACLForCloudFront"
      DefaultAction:
        Allow: {}
      Scope: REGIONAL
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        SampledRequestsEnabled: true
      Rules:
        - Action:
            Block: {}
          Name: "RuleForAPIGateway"
          Priority: 1
          Statement:
            OrStatement:
              Statements:
                - ByteMatchStatement:
                    FieldToMatch:
                      UriPath:
                        StartsWith: "/api/"
                    TextTransformations:
                      - Priority: 0
                        Type: NONE

  WAFv2RuleGroup:
    Type: AWS::WAFv2::RuleGroup
    Properties:
      Name: "RuleGroupForAPIGateway"
      Scope: REGIONAL
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
      Capacity: 1
      RuleStatements:
        - Name: "RuleStatementForAPIGateway"
          Priority: 1
          Action:
            Allow: {}
          Statement:
            AndStatement:
              Statements:
                - ByteMatchStatement:
                    FieldToMatch:
                      UriPath:
                        StartsWith: "/api/"
                    TextTransformations:
                      - Priority: 0
                        Type: NONE

  CacheAppDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Cache-App
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
  ApiGatewayInvokeURL:
    Description: Invoke URL of the API Gateway
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello"
  CognitoUserPoolId:
    Description: User Pool ID of the Cognito User Pool
    Value: !Ref CognitoUserPool
  CognitoUserPoolClientId:
    Description: Client ID of the Cognito User Pool
    Value: !Ref CognitoUserPoolClient
