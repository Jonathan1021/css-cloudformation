AWSTemplateFormatVersion: '2010-09-09'
Description: Layout Onboarding

Parameters:
  GithubRepo:
    Type: String
    Description: Repository de GitHub para el proyecto Web
  GithubOAuthToken:
    Type: String
    Description: OAuthToken de GitHub para acceder al repositorio

Resources:

  # AWS Amplify App
  OnboardingAmplifyApp:
    Type: AWS::Amplify::App
    Properties:
      Name: OnboardingApp
      Repository: !Ref GithubRepo
      OAuthToken: !Ref GithubOAuthToken
      EnvironmentVariables: {}

  # API Gateway
  OnboardingApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: OnboardingApi

  # API Gateway Resource
  OnboardingApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref OnboardingApi
      ParentId: !GetAtt OnboardingApi.RootResourceId
      PathPart: "onboarding"

  # API Gateway Method
  OnboardingApiGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: AWS_IAM
      HttpMethod: GET
      ResourceId: !GetAtt OnboardingApiResource.Id
      RestApiId: !Ref OnboardingApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaDemo.Arn}/invocations"

  # Lambda Function
  LambdaDemo:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LambdaDemo
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Code:
        ZipFile: |
          import json

          def handler(event, context):
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello World!')
              }
      Runtime: python3.8

  # IAM Role for Lambda
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaExecutionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

Outputs:
  OnboardingAmplifyAppId:
    Description: "ID de la app de AWS Amplify"
    Value: !Ref OnboardingAmplifyApp
  OnboardingApiId:
    Description: "ID del API Gateway"
    Value: !Ref OnboardingApi